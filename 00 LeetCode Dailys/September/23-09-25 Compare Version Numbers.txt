class Solution {
public:
    int compareVersion(string v1, string v2) {
        int n = v1.size(), m = v2.size();
        
        vector<string> v1_segments;
        vector<string> v2_segments;

        // Split v1
        int i = 0;
        string temp = "";
        while (i < n) {
            if (v1[i] != '.') {
                temp.push_back(v1[i]);
            } else {
                v1_segments.push_back(temp);
                temp = "";
            }
            i++;
        }
        v1_segments.push_back(temp);

        // Split v2
        int j = 0;
        temp = "";
        while (j < m) {
            if (v2[j] != '.') {
                temp.push_back(v2[j]);
            } else {
                v2_segments.push_back(temp);
                temp = "";
            }
            j++;
        }
        v2_segments.push_back(temp);

        // Compare
        i = 0, j = 0;
        int n1 = v1_segments.size();
        int m1 = v2_segments.size();
        while (i < n1 && j < m1) {
            int seg1 = stoi(v1_segments[i]);
            int seg2 = stoi(v2_segments[j]);

            if (seg1 < seg2) return -1;
            if (seg1 > seg2) return 1;

            i++; j++;
        }

        // Remaining segments in v1
        while (i < n1) {
            int seg = stoi(v1_segments[i]);
            if (seg != 0) return 1;
            i++;
        }

        // Remaining segments in v2
        while (j < m1) {
            int seg = stoi(v2_segments[j]);
            if (seg != 0) return -1;
            j++;
        }

        return 0;
    }
};
