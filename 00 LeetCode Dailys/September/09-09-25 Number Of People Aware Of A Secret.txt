/*
- 1st person dicovers secret of day 1
- They wait until delay'th day, after which, they share it everyday to a new person
- Each person forgets the secret after forget'th day
    - If delay >= forget they won't be able to share it to anyone
    - No. of people a person can tell the secret before forgetting -> (forget - delay)
    - How many people know it today depends on
      how many people knew it yesterday, how many forgot & delay
- Return the number of people who know the secret after n days have passed

dp[i][j] = The number of people who have known the secret for j+1'th days on day i.
*/
class Solution {
private:
    const int M = 1e9+7;
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
        vector<long long> dp(n + 1, 0); // dp[i] = How many people know on i-th day
        dp[1] = 1;
        int can_share = 0;
        for (int day = 2; day <= n; ++day) {
            if (day - delay >= 1)
                can_share = (can_share + dp[day-delay]) % M;
            if (day - forget >= 1)
                can_share = (can_share - dp[day-forget] + M) % M;
            dp[day] = can_share;
        }

        int ans = 0;
        for (int i = n-forget+1; i <= n; ++i) {
            ans = (ans + dp[i]) % M;
        }
        return ans;
    }
};